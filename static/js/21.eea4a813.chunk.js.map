{"version":3,"sources":["routes/posts/2023-03-02-Making Go functions generic III/post.js"],"names":["__webpack_require__","r","__webpack_exports__","title","tags","spoiler","getContent","e","then","bind","author"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAeA,EAAA,SACbC,MAAK,uHACLC,KAAM,CACJ,aACA,SACA,WACA,cACA,aACA,iBACA,uBACA,sBAEFC,QAAS,kLACTC,WAAY,kBAAMN,EAAAO,EAAA,GAAAC,KAAAR,EAAAS,KAAA,WAClBC,OAAQ","file":"static/js/21.eea4a813.chunk.js","sourcesContent":["export default {\n  title: `Golang, generics and Kubernetes operator tooling III. Juggling value and pointer type parameters will get you there.`,\n  tags: [\n    \"Kubernetes\", \n    \"golang\", \n    \"generics\", \n    \"kubebuilder\", \n    \"interfaces\", \n    \"controller-gen\", \n    \"Kubernetes operators\", \n    \"k8ssandra-operator\"\n],\n  spoiler: \"Part III of of a series on golang generics and their applications in Kubernetes operator development. We discuss how to enforce that a type is a pointer to its type parameter.\",\n  getContent: () => import('./document.mdx'),\n  author: \"Miles Garnsey\",\n}\n"],"sourceRoot":""}