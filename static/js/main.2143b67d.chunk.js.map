{"version":3,"sources":["components/BlogPostLayout.module.css","components/Pagination.module.css","components/ArticleList.module.css","utils/formats.js","components/ArticleMeta.js","components/ArticleMeta.module.css","components/BlogIndexPage.module.css","components/BlogLayout.module.css","siteMetadata.js","components/Bio.js","utils/getGravatarURL.js","components/Pagination.js","components/BlogIndexPage.js","components/NotFoundPage.js","components/LoadingIndicator.js","components/BlogLayout.js","routes/posts/index.js","components/ArticleList.js","components/BlogPostLayout.js","routes/index.js","components/Bio.module.css","components/LoadingIndicator.module.css","components/ArticleSummary.js","components/ArticleSummary.module.css","biopic.jpeg","serviceWorker.js","index.js"],"names":["module","exports","title","container","header","footer","bio","links","next","content","Pagination","previous","articlelist","articlelistitems","articlelistheading","months","ArticleMeta","_ref","readingTimeElement","blogRoot","meta","readingTime","minutes","Math","max","round","cups","react_default","a","createElement","Fragment","className","styles","Array","fill","join","dateTime","date","toUTCString","dateString","Date","monthName","getMonth","dayOfMonth","getDate","fourDigitYear","getFullYear","concat","formatDate","tags","length","map","tag","key","es","href","articlesList","contentarea","siteMetadata","author","description","indexPageSize","Bio","props","email","size","_ref$defaultURL","defaultURL","hash","md5","toLowerCase","trim","encodeURIComponent","getGravatarURL","src","biopic","alt","pageCount","pageNumber","dist_es","String","pages","current","count","BlogIndexPage","postRoutes","style","overflow","components_Bio","route","url","ArticleSummary","components_Pagination","target","float","NotFoundPage","NotFound","LoadingIndicator","active","BlogLayout","isViewingIndex","loadingRoute","useLoadingRoute","components_LoadingIndicator","render","components_NotFoundPage","postModules","./2019-08-019-Welcome/post.js","__webpack_require__","e","then","bind","./2019-08-19-Data Engineering Pt 1/post.js","./2019-08-27-Data Engineering Pt 2/post.js","./2019-09-06-About Kafka/post.js","./2019-09-10-Data Engineering Pt 3/post.js","./2023-02-16-Making Go functions generic I/post.js","./2023-02-23-Making Go functions generic II/post.js","./2023-03-02-Making Go functions generic III/post.js","importPost","pathname","postPathnames","Object","keys","datePattern","postDetails","slug","slugify","replace","dateMatch","match","parseInt","posts","sortBy","reverse","i","getPage","Navi","asyncToGenerator","regenerator_default","mark","_callee2","_ref3","post","getContent","previousSlug","previousPost","nextSlug","nextPost","previousPostDetails","nextPostDetails","wrap","_context2","prev","sent","default","objectWithoutProperties","abrupt","getData","req","context","objectSpread","previousDetails","nextDetails","getView","_getView","_callee","_ref4","MDXComponent","other","_context","stop","apply","this","arguments","ArticleList","connect","useView","useCurrentRoute","data","resolvedRoutes","l","toLocaleDateString","BlogPostLayout","_useCurrentRoute","_useView","head","index_es","components","Link","wrapper","_ref2","children","chunks","chunk","chunkPagePairs","pageTitle","method","Promise","all","resolve","routes","_x3","view","components_BlogIndexPage","_x","_x2","_callee4","_context4","_callee3","_context3","_x6","_x4","_x5","compose","withContext","mountpath","withView","path","test","components_BlogLayout","mount","/","shift","/page","/1","redirect","fromPairs","/posts","*","withData","_ref5","_callee5","_context5","t0","_x7","_x8","components_ArticleList","components_BlogPostLayout","/tags","lazy","/about","/rss","LoadingIndicator-animation","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_navi__WEBPACK_IMPORTED_MODULE_1__","_ArticleMeta__WEBPACK_IMPORTED_MODULE_2__","_ArticleSummary_module_css__WEBPACK_IMPORTED_MODULE_3__","_ArticleSummary_module_css__WEBPACK_IMPORTED_MODULE_3___default","spoiler","p","Boolean","window","location","hostname","register","main","_main","navigation","createBrowserNavigation","getRoute","process","renderer","ReactDOM","hydrate","react_navi_helmet_async_dist_es","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2143b67d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"BlogPostLayout_title__2L_2_\",\"container\":\"BlogPostLayout_container__3yuyZ\",\"header\":\"BlogPostLayout_header__1Ny4T\",\"footer\":\"BlogPostLayout_footer__3ofxa\",\"bio\":\"BlogPostLayout_bio__diNn9\",\"links\":\"BlogPostLayout_links__-LX2X\",\"next\":\"BlogPostLayout_next__KrMHx\",\"content\":\"BlogPostLayout_content__1mzTO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pagination\":\"Pagination_Pagination__2Xt2h\",\"previous\":\"Pagination_previous__1akUm\",\"next\":\"Pagination_next__7Ba4Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ArticleList_container__2ipOS\",\"articlelist\":\"ArticleList_articlelist__1_a6n\",\"articlelistitems\":\"ArticleList_articlelistitems__3Uqkb\",\"articlelistheading\":\"ArticleList_articlelistheading__3gLB0\"};","export let months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\nexport function formatDate(dateString) {\n  let date = new Date(dateString)\n  let monthName = months[date.getMonth()]\n  let dayOfMonth = date.getDate()\n  let fourDigitYear = date.getFullYear()\n\n  return `${monthName} ${dayOfMonth}, ${fourDigitYear}`\n}","import { join } from 'path'\nimport React from 'react'\nimport { Link } from 'react-navi'\nimport { formatDate } from '../utils/formats'\nimport styles from './ArticleMeta.module.css'\n\nfunction ArticleMeta({ blogRoot, meta, readingTime }) {\n  let readingTimeElement\n  if (readingTime) {\n    let minutes = Math.max(Math.round(readingTime.minutes), 1)\n    let cups = Math.round(minutes / 5);\n    readingTimeElement =\n      <React.Fragment>\n        {' '}&bull;{' '}\n        <span className={styles.readingTime}>\n          {new Array(cups || 1).fill('☕️').join('')} {minutes} min read\n        </span>\n      </React.Fragment>\n  }\n      \n  return (\n    <small className={styles.ArticleMeta}>\n      <time dateTime={meta.date.toUTCString()}>{formatDate(meta.date)}</time>\n      {\n        meta.tags &&\n        meta.tags.length &&\n        <>\n          {' '}&bull;{' '}\n          <ul className={styles.tags}>\n            {meta.tags.map(tag =>\n              <li key={tag}>\n                <Link href={join(blogRoot, 'tags', tag)}>{tag}</Link>\n              </li>\n            )}\n          </ul>\n        </>\n      }\n      {readingTimeElement || null}\n    </small>\n  )\n}\n\nexport default ArticleMeta","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"ArticleMeta_tags__1IJ9w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"BlogIndexPage_title__341hM\",\"articlesList\":\"BlogIndexPage_articlesList__1V39R\",\"footer\":\"BlogIndexPage_footer__1vkZQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BlogLayout_container__1fiRb\",\"contentarea\":\"BlogLayout_contentarea__p9Rdv\",\"title\":\"BlogLayout_title__3HyDU\"};","export default {\n  // The blog's title as it appears in the layout header, and in the document\n  // <title> tag.\n  title: \"Artificial Unintelligence.\",\n\n  author: \"Miles Garnsey\",\n  description: \"A blog about data science and engineering, machine learning, and distributed system engineering.\",\n\n  // The number of posts to a page on the site index.\n  indexPageSize: 10,\n}\n","import React from 'react'\nimport styles from './Bio.module.css'\nimport { getGravatarURL } from '../utils/getGravatarURL'\nimport biopic from '../biopic.jpeg'\n\nfunction Bio(props) {\n  let photoURL = getGravatarURL({\n    email: \"test1@example.com\",\n    size: 56,\n  })\n\n  return (\n    <div className={`\n      ${styles.Bio}\n      ${props.className || ''}\n    `}>\n    <img src={biopic} className={styles[\"image\"]} alt=\"Miles Garnsey\" />\n      <p>\n        A blog about data science/engineering, machine learning, AI and distributed systems. \n        <br />\n        By{' '} <a href=\"https://twitter.com/MilesGarnsey/\">Miles Garnsey</a>.\n        <br />\n        <i>Managing Director @ Atreus Technologies, Engineering @ another place. </i>\n        <br />\n        For questions, feedback, or work (the latter preferred) contact me on {' '}\n        <a href=\"https://twitter.com/MilesGarnsey/\">Twitter</a>, <a href=\"https://hachyderm.io/@milesgarnsey\">Mastodon</a>,\n        or catch me on {' '}\n        <a href=\"https://www.linkedin.com/in/miles-garnsey-b283403b/\">LinkedIn</a>.\n        <br />\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import md5 from 'blueimp-md5'\n\nexport function getGravatarURL({ email, size, defaultURL = 'identicon' }) {\n  let hash = md5(email.toLowerCase().trim())\n  return `https://www.gravatar.com/avatar/${hash}.jpg?s=${size}&d=${encodeURIComponent(defaultURL)}`\n}\n","import { join } from 'path'\nimport React from 'react'\nimport { Link } from 'react-navi'\nimport styles from './Pagination.module.css'\n\nfunction Pagination({ blogRoot, pageCount, pageNumber }) {\n  return (\n    <small className={styles.Pagination}>\n      {\n        pageNumber !== 1 &&\n        <Link\n          className={styles.previous}\n          href={join(blogRoot, 'page', String(pageNumber - 1))}>\n          ← Previous\n        </Link>\n      }\n      <span className={styles.pages}>\n        {' '}Page <span className={styles.current}>{pageNumber}</span>/<span className={styles.count}>{pageCount}</span>{' '}\n      </span>\n      {\n        pageNumber < pageCount &&\n        <Link\n          className={styles.next}\n          href={join(blogRoot, 'page', String(pageNumber + 1))}>\n          Next →\n        </Link>\n      }\n    </small>\n  )\n}\n\nexport default Pagination","import React from 'react'\nimport { Link } from 'react-navi'\nimport siteMetadata from '../siteMetadata'\nimport ArticleSummary from './ArticleSummary'\nimport Bio from './Bio'\nimport Pagination from './Pagination'\nimport styles from './BlogIndexPage.module.css'\n\nfunction BlogIndexPage({ blogRoot, pageCount, pageNumber, postRoutes }) {\n  return (\n    <div style={{overflow:\"hidden\"}}>\n      <header>\n        <h1 className={styles.title}>\n          <Link href={blogRoot}>{siteMetadata.title}</Link>\n        </h1>\n        <Bio />\n      </header>\n      <ul className={styles.articlesList}>\n        {postRoutes.map(route =>\n          <li key={route.url.href}>\n            <ArticleSummary blogRoot={blogRoot} route={route} />\n          </li>\n        )}\n      </ul>\n      {\n        pageCount > 1 &&\n        <Pagination\n          blogRoot={blogRoot}\n          pageCount={pageCount}\n          pageNumber={pageNumber}\n        />\n      }\n      <footer className={styles.footer}>\n        <div>\n          <a\n            href='./rss.xml'\n            target='_blank'\n            style={{ float: 'right' }}>\n            RSS\n          </a>\n          <Link href='./about'>\n            About\n          </Link> &bull;{' '}\n          <Link href='./tags'>\n            Tags\n          </Link> &bull;{' '}\n          <a href='https://github.com/frontarm/create-react-blog'>\n            Source\n          </a>\n        </div>\n      </footer>\n    </div>\n  )\n}\n\nexport default BlogIndexPage\n","import React from 'react'\nimport styles from './NotFoundPage.module.css'\n\n// Note that create-react-navi-app will always show an error screen when this\n// is rendered. This is because the underlying react-scripts package shows\n// the error screen when a NotFoundError is thrown, even though it's caught\n// by <NotFoundBoundary>. To see the error rendered by this function,\n// you'll just need to close the error overlay with the \"x\" at the top right.\nfunction NotFoundPage() {\n  return (\n    <div className={styles.NotFound}>\n      <h1>404 - Not Found</h1>\n    </div>\n  )\n}\n\nexport default NotFoundPage","import React from 'react'\nimport styles from './LoadingIndicator.module.css'\n\nfunction LoadingIndicator({ active, className, style }) {\n  return (\n    <div\n      className={`\n        ${styles.LoadingIndicator}\n        ${active ? styles.active : ''}\n        ${className}\n      `}\n      style={style}\n    />\n  )\n}\n\nexport default LoadingIndicator","import React from 'react'\nimport {\n  View,\n  Link,\n  NotFoundBoundary,\n  useLoadingRoute,\n} from 'react-navi'\nimport siteMetadata from '../siteMetadata'\nimport NotFoundPage from './NotFoundPage'\nimport LoadingIndicator from './LoadingIndicator'\nimport styles from './BlogLayout.module.css'\n\nfunction BlogLayout({ blogRoot, isViewingIndex }) {\n  let loadingRoute = useLoadingRoute()\n\n  return (\n    <div className={styles.container}>\n      <LoadingIndicator active={!!loadingRoute} />\n\n      {// Don't show the header on index pages, as it has a special header.\n      !isViewingIndex && (\n        <header>\n          <h1 className={styles.title}>\n            <Link href={blogRoot}>{siteMetadata.title}</Link>\n          </h1>\n        </header>\n      )}\n\n      <main className={styles.contentarea}>\n        <NotFoundBoundary render={() => <NotFoundPage />}>\n          <View />\n        </NotFoundBoundary>\n      </main>\n    </div>\n  )\n}\n\nexport default BlogLayout\n","import importAll from 'import-all.macro'\nimport * as Navi from 'navi'\nimport { join } from 'path'\nimport { sortBy } from 'lodash'\nimport slugify from 'slugify'\n\n// Get a list of all posts, that will not be loaded until the user\n// requests them.\nconst postModules = importAll.deferred('./**/post.js')\nconst importPost = pathname => postModules[pathname]()\nconst postPathnames = Object.keys(postModules)\nconst datePattern = /^((\\d{1,4})-(\\d{1,4})-(\\d{1,4}))[/-]/\n\nlet postDetails = postPathnames.map(pathname => {\n  let slug = slugify(\n    pathname.replace(/post.jsx?$/, '').replace(/(\\d)\\/(\\d)/, '$1-$2'),\n  )\n    .replace(/^[-.]+|[.-]+$/g, '')\n    .replace(datePattern, '$1/')\n\n  let date\n  let dateMatch = slug.match(datePattern)\n  if (dateMatch) {\n    date = new Date(dateMatch[2], parseInt(dateMatch[3]) - 1, dateMatch[4])\n  }\n\n  return {\n    slug,\n    pathname,\n    date,\n  }\n})\n\n// Sort the pages by slug (which contain the dates)\npostDetails = sortBy(postDetails, ['slug']).reverse()\n\n// Create url-friendly slugs from post pathnames, and a `getPage()` function\n// that can be used to load and return the post's Page object.\nlet posts = postDetails.map(({ slug, pathname, date }, i) => ({\n  getPage: Navi.map(async () => {\n    let { default: post } = await importPost(pathname)\n    let { title, getContent, ...meta } = post\n    let previousSlug, previousPost, nextSlug, nextPost\n\n    if (i !== 0) {\n      let previousPostDetails = postDetails[i - 1]\n      previousPost = (await importPost(previousPostDetails.pathname)).default\n      previousSlug = previousPostDetails.slug\n    }\n\n    if (i + 1 < postDetails.length) {\n      let nextPostDetails = postDetails[i + 1]\n      nextPost = (await importPost(nextPostDetails.pathname)).default\n      nextSlug = nextPostDetails.slug\n    }\n\n    return Navi.route({\n      title,\n      getData: (req, context) => ({\n        date,\n        pathname,\n        slug,\n        previousDetails: previousPost && {\n          title: previousPost.title,\n          href: join(context.blogRoot, 'posts', previousSlug),\n        },\n        nextDetails: nextPost && {\n          title: nextPost.title,\n          href: join(context.blogRoot, 'posts', nextSlug),\n        },\n        ...meta,\n      }),\n      getView: async () => {\n        let { default: MDXComponent, ...other } = await getContent()\n        return { MDXComponent, ...other }\n      },\n    })\n  }),\n  slug,\n}))\n\nexport default posts\n","import React from 'react'\nimport styles from './ArticleList.module.css'\nimport {withView, compose,route,resolve,mount} from 'navi'\nimport {useCurrentRoute, useNavigation, View, useView,useLoadingRoute} from 'react-navi'\nimport { join } from 'path'\nimport posts from '../routes/posts'\nimport routes from '../routes/index'\n\nfunction ArticleList(props) {\n  const {connect} = useView()\n  const {resolvedRoutes}=useCurrentRoute().data\n  return connect(\n    <>\n      <div className={styles.container}>\n          <ul className={styles.articlelist}>\n            <h2 className={styles.articlelistheading}>Recent Posts</h2>\n              {useCurrentRoute().data.resolvedRoutes.map(l=>\n                <li className={styles.articlelistitems} key={l.url.href}>\n                <small><a href={l.url.href}>\n                  {l.title}<br/>\n                </a>\n                {l.data.date.toLocaleDateString()}\n                </small>\n              </li>)}\n          </ul>\n      </div>\n    </>)\n}\nexport default ArticleList\n","import React from 'react'\nimport { Link, useCurrentRoute, useView, View} from 'react-navi'\nimport { MDXProvider } from '@mdx-js/react'\nimport siteMetadata from '../siteMetadata'\nimport ArticleMeta from './ArticleMeta'\nimport Bio from './Bio'\nimport styles from './BlogPostLayout.module.css'\nimport ArticleList from './ArticleList'\n\nfunction BlogPostLayout({ blogRoot }) {\n  let { title, data, url } = useCurrentRoute()\n  let { connect, content, head } = useView()\n  let { MDXComponent, readingTime } = content\n  // The content for posts is an MDX component, so we'll need\n  // to use <MDXProvider> to ensure that links are rendered\n  // with <Link>, and thus use pushState.\n  return connect(\n    <>\n      {head}\n      <article className={styles.container}>\n        <header className={styles.header}>\n          <h1 className={styles.title}>\n            <Link href={url.pathname}>{title}</Link>\n          </h1>\n          <ArticleMeta\n            blogRoot={blogRoot}\n            meta={data}\n            readingTime={readingTime}\n          />\n        </header>\n        <MDXProvider components={{\n          a: Link,\n          wrapper: ({ children }) =>\n            <div className={styles.content}>\n              {children}\n            </div>\n        }}>\n          <MDXComponent />\n        </MDXProvider>\n        <footer className={styles.footer}>\n          <h3 className={styles.title}>\n            <Link href={blogRoot}>\n              {siteMetadata.title}\n            </Link>\n          </h3>\n          <Bio className={styles.bio} />\n          <section className={styles.links}>\n            {\n              data.previousDetails &&\n              <Link className={styles.previous} href={data.previousDetails.href}>\n                ← {data.previousDetails.title}\n              </Link>\n            }\n            {\n              data.nextDetails &&\n              <Link className={styles.next} href={data.nextDetails.href}>\n                {data.nextDetails.title} →\n              </Link>\n            }\n          </section>\n        </footer>\n      </article>\n    </>\n  )\n}\n\nexport default BlogPostLayout\n","import { compose, lazy, map, mount, redirect, resolve, route, withContext, withData, withView } from 'navi'\nimport { Link, useCurrentRoute, useView, View,useLoadingRoute} from 'react-navi'\nimport React from 'react'\nimport { join } from 'path'\nimport { chunk, fromPairs } from 'lodash'\nimport BlogIndexPage from '../components/BlogIndexPage'\nimport BlogLayout from '../components/BlogLayout'\nimport BlogPostLayout from '../components/BlogPostLayout'\nimport siteMetadata from '../siteMetadata'\nimport posts from './posts'\nimport ArticleList from '../components/ArticleList'\n\n// Split the posts into a list of chunks of the given size, and\n// then build index pages for each chunk.\nlet chunks = chunk(posts, siteMetadata.indexPageSize)\nlet chunkPagePairs = chunks.map((chunk, i) => [\n  '/' + (i + 1),\n  map(async (req, context) => {\n    // Don't load anything when just crawling\n    if (req.method === 'HEAD') {\n      return route()\n    }\n\n    // Get metadata for all pages on this page\n    let postRoutes = await Promise.all(\n      chunk.map(async post => {\n        let href = join(context.blogRoot, 'posts', post.slug)\n        return await resolve({\n          // If you want to show the page content on the index page, set\n          // this to 'GET' to be able to access it.\n          method: 'HEAD',\n          routes,\n          url: href,\n        })\n      }),\n    )\n\n    // Only add a page number to the page title after the first index page.\n    let pageTitle = siteMetadata.title\n    if (i > 0) {\n      pageTitle += ` – page ${i + 1}`\n    }\n    return route({\n      title: pageTitle,\n      view: (\n        <BlogIndexPage\n          blogRoot={context.blogRoot}\n          pageNumber={i + 1}\n          pageCount={chunks.length}\n          postRoutes={postRoutes}\n        />\n      ),\n    })\n  }),\n])\nlet resolvedRoutes = async (req,context)=> await Promise.all(posts.map(async post => {\n    if (req.method === 'HEAD') return route()\n    return await resolve({\n      method: 'HEAD',\n      routes,\n      url: join(context.blogRoot, 'posts', post.slug),\n    })\n  }))\nconst routes = compose(\n  withContext((req, context) => ({\n    ...context,\n    blogRoot: req.mountpath || '/',\n  })),\n  withView((req, context) => {\n    // Check if the current page is an index page by comparing the remaining\n    // portion of the URL's pathname with the index page paths.\n    let isViewingIndex = req.path === '/' || /^\\/page\\/\\d+\\/$/.test(req.path)\n\n    // Render the application-wide layout\n    return (\n      <BlogLayout\n        blogRoot={context.blogRoot}\n        isViewingIndex={isViewingIndex}\n      />\n    )\n  }),\n  mount({\n    // The blog's index pages go here. The first index page is mapped to the\n    // root URL, with a redirect from \"/page/1\". Subsequent index pages are\n    // mapped to \"/page/n\".\n    '/': chunkPagePairs.shift()[1],\n    '/page': mount({\n      '/1': redirect((req, context) => context.blogRoot),\n      ...fromPairs(chunkPagePairs),\n    }),\n    // Put posts under \"/posts\", so that they can be wrapped with a\n    // \"<BlogPostLayout />\" that configures MDX and adds a post-specific layout.\n    '/posts': mount({\n      '*':  compose(\n      withData(async (req,context)=>({\"resolvedRoutes\": await resolvedRoutes(req,context)})),\n      mount({\n        \"*\":compose(\n            withView((req, context) =>\n              (<>\n                <ArticleList/>\n                <BlogPostLayout blogRoot={context.blogRoot} />\n              </>)),\n          mount({\n            ...fromPairs(posts.map(post => ['/' + post.slug, post.getPage])),\n          })\n      )})\n  )\n  }),\n    // Miscellaneous pages can be added directly to the root switch.\n    '/tags': lazy(() => import('./tags')),\n    '/about': lazy(() => import('./about')),\n\n    // Only the statically built copy of the RSS feed is intended to be opened,\n    // but the route is defined here so that the static renderer will pick it\n    // up.\n    '/rss': route(),\n  }),\n)\n\nexport default routes\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Bio\":\"Bio_Bio__1ks_2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoadingIndicator\":\"LoadingIndicator_LoadingIndicator__3KSl0\",\"active\":\"LoadingIndicator_active__3EncM\",\"LoadingIndicator-animation\":\"LoadingIndicator_LoadingIndicator-animation__2icwd\"};","import React from 'react'\nimport { Link } from 'react-navi'\nimport ArticleMeta from './ArticleMeta'\nimport styles from './ArticleSummary.module.css'\n\nfunction ArticleSummary({ blogRoot, route }) {\n  return (\n    <article className={styles.ArticleSummary}>\n      <h2><Link href={route.url.href}>{route.title}</Link></h2>\n      <ArticleMeta blogRoot={blogRoot} meta={route.data} />\n      <p>{route.data.spoiler}</p>\n    </article>\n  )\n}\n\nexport default ArticleSummary","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ArticleSummary\":\"ArticleSummary_ArticleSummary__3I5Qk\"};","module.exports = __webpack_public_path__ + \"static/media/biopic.57a2a67e.jpeg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import register from \"navi-scripts/register\";\nimport { createBrowserNavigation } from \"navi\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"react-navi\";\nimport HelmetProvider from \"react-navi-helmet-async\";\nimport \"./index.module.css\";\nimport routes from \"./routes\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// `register()` is responsible for exporting your app's pages and App\n// component to the static renderer, and for starting the app with the\n// `main()` function when running within a browser.\nregister({\n  // Specify the pages that navi-app should statically build, by passing in a\n  // Switch object.\n  routes,\n\n  // This will only be called when loading your app in the browser. It won't\n  // be called when performing static generation.\n  async main() {\n    let navigation = createBrowserNavigation({ routes });\n\n    // Wait until the navigation has loaded the page's content, or failed to do\n    // so. If you want to load other data in parallel while the initial page is\n    // loading, make sure to start loading before this line.\n    await navigation.getRoute();\n\n    // React requires that you call `ReactDOM.hydrate` if there is statically\n    // rendered content in the root element, but prefers us to call\n    // `ReactDOM.render` when it is empty.\n    let hasStaticContent = process.env.NODE_ENV === \"production\";\n    let renderer = hasStaticContent ? ReactDOM.hydrate : ReactDOM.render;\n\n    // Start react, passing in the current navigation state and\n    // rendering the top-level view.\n    renderer(\n      <HelmetProvider>\n        <Router navigation={navigation} />\n      </HelmetProvider>,\n      document.getElementById(\"root\")\n    )\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: http://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n  }\n});\n"],"sourceRoot":""}