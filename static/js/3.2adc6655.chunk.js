(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{66:function(e,a,n){"use strict";n.r(a),n.d(a,"readingTime",function(){return b}),n.d(a,"default",function(){return m}),n.d(a,"tableOfContents",function(){return k}),n.d(a,"frontMatter",function(){return f});var t=n(16),s=(n(0),n(22)),o=n(67),i=n.n(o),l=n(68),c=n.n(l),r=n(69),p=n.n(r),u=n(70),h=n.n(u),b={text:"15 min read",minutes:14.845,time:890700,words:2969},d={},g="wrapper";function m(e){var a=e.components,n=Object(t.a)(e,["components"]);return Object(s.b)(g,Object.assign({},d,n,{components:a,mdxType:"MDXLayout"}),Object(s.b)("p",null,"OK, now we have something resembling a platform that we can develop against, let\u2019s talk about how our application will actually work (finally, you gasp). This is an application which will collect data from Twitter and make it available to others."),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"At the top level, we need to think about;")),Object(s.b)("ol",null,Object(s.b)("li",{parentName:"ol"},"How long we want to store the data for - is it just until the next service has time to access it, or is it a permanent record?"),Object(s.b)("li",{parentName:"ol"},"Do the individual records have any sort of history (for example, how do we treat edits to Tweets) and do we want to retain all of it?"),Object(s.b)("li",{parentName:"ol"},"Does the structure of the data change? If so, how do we manage changes to the data structure such that consumers expecting a previous structure can consume the new structure?"),Object(s.b)("li",{parentName:"ol"},"Velocity, variety and volume of data.")),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Translating through to a technical design -")),Object(s.b)("ol",null,Object(s.b)("li",{parentName:"ol"},"We want to store the data forever, this is a data storage system, not a messaging system."),Object(s.b)("li",{parentName:"ol"},"For the sake of simplicity, we will overwrite previous versions of tweets."),Object(s.b)("li",{parentName:"ol"},"We do not control the data structure, and should therefore expect it to change."),Object(s.b)("li",{parentName:"ol"},"We really only have one type of data present, which is tweets and we can scale for velocity and volume using more instances in our Kafka consumer group (but see the note in italics below, and my forthcoming post on Kafka for some roadbumps in this story.).")),Object(s.b)("p",null,"Translating through to the implementation - (1) and (2) suggest that what we want is ",Object(s.b)("strong",{parentName:"p"},"the most recent version of each record emitted stored forever - so we\u2019ll need to set our Kafka topics to use log compaction"),". We then just need to ensure that the duplicated data is retained for long enough that all consumers can pick it up before old versions are deleted."),Object(s.b)("p",null,"Requirement (3) can be addressed by using ",Object(s.b)("strong",{parentName:"p"},"Avro\u2019s schema evolution (next post)"),", while ",Object(s.b)("strong",{parentName:"p"},"velocity is addressed by using Kafka")," (throughput can be increased by horizontal scaling of brokers and application instances), volume is the same story, and the variety concern is not very relevant here."),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"NB: I believe that there is something in the developer\u2019s agreement with Twitter to the effect that tweets need to be deleted from your app if a corresponding ",Object(s.b)("a",Object.assign({parentName:"em"},{href:"http://danielasfregola.github.io/twitter4s/6.1/api/com/danielasfregola/twitter4s/entities/streaming/common/StatusDeletionNotice.html"}),Object(s.b)("inlineCode",{parentName:"a"},"StatusDeletionNotice"))," if received. I am not touching on this, because my assumption is that you are running a temporary environment which is deleting ",Object(s.b)("em",{parentName:"em"},"ALL")," data on every restart. If this is not the case, and you get sued or something, you can\u2019t say I didn\u2019t warn you\u2026")),Object(s.b)("div",{className:i.a.sidebarcontainer},Object(s.b)("span",{className:i.a.sidebar},Object(s.b)("h3",{id:"design-choices"},"Design Choices"),Object(s.b)("p",null,"Given the way Kafka works we have a few choices we need to make -"),Object(s.b)("ol",null,Object(s.b)("li",{parentName:"ol"},"Number of topics - In this case we know we have a single topic and there are apparently few decisions to make. See the previous post ",Object(s.b)("a",Object.assign({parentName:"li"},{href:"../../2019-09-06/About-Kafka"}),"about Kafka")," for some of the intricacies that influence this decision."),Object(s.b)("li",{parentName:"ol"},"Number of partitions - This will set the maximum number of application instances we can ever deploy to scale horizontally, and will also set the maximum number of Kafka brokers which can contribute to data storage."),Object(s.b)("li",{parentName:"ol"},"Number of replications - Because we only have a single broker on our test platform, we can only have one rep, but we would have more choice in a production cluster and should consider this at development time."),Object(s.b)("li",{parentName:"ol"},"ISR settings - If a write is in progress and we have one replica on a single broker, do we acknowledge to the producer that the data is written, or wait for the data to replicate to more brokers to ensure that a broker failure can\u2019t cause data loss?"),Object(s.b)("li",{parentName:"ol"},"Number of application instances - This is often easier to scale in production than is the number of partitions.")),Object(s.b)("p",null,"As with all things distributed, we should always think of a world in which our cluster is built from one hundred slow machines, rather than 10 fast ones. Generally, smaller instances cost less on the cloud, so the better you can distribute your application the more money you save. It also helps with scaling, should you Enhance Shareholder Value sufficiently to Drive the Step Change and Experience Hockey-Stick Growth. Yay.")),Object(s.b)("span",null,Object(s.b)("h3",{id:"retention"},"Retention"),Object(s.b)("p",null,"We\u2019re using log compaction to retain the most recent iteration of each tweet, in contrast to the standard cleanup strategy - delete - log compaction keeps the most recent value for each key. Log compacted topics have a ",Object(s.b)("inlineCode",{parentName:"p"},"cleanup.policy")," set to ",Object(s.b)("inlineCode",{parentName:"p"},"compact"),", but the conditions under which the compaction actually takes place are a bit confusing. The ",Object(s.b)("inlineCode",{parentName:"p"},"delete")," option would use ",Object(s.b)("inlineCode",{parentName:"p"},"retention.bytes")," (which controls maximum topic size, and is disabled with a value of -1 by default) as well as ",Object(s.b)("inlineCode",{parentName:"p"},"retention.ms"),", which controls the maximum age of a record before deletion occurs (and is not to be confused with ",Object(s.b)("inlineCode",{parentName:"p"},"delete.retention.ms"),")."),Object(s.b)("p",null,"But when we use a compaction cleanup strategy, it actually uses ",Object(s.b)("inlineCode",{parentName:"p"},"min.cleanable.dirty.ratio")," - the proportion of log space consumed by old records as a value between 0 and 1. Complicating the situation further is that no compaction can take place before the value specified in ",Object(s.b)("inlineCode",{parentName:"p"},"min.compaction.lag.ms"),", which we can use to our advantage to ensure that consumers have an opportunity to read the data before it is compacted. Note that what is missing is an ability to set a corresponding ",Object(s.b)("inlineCode",{parentName:"p"},"max.compaction.lag.ms"),", so don\u2019t think of log compaction as a way to fake a database ",Object(s.b)("inlineCode",{parentName:"p"},"UPDATE")," operation (a common error), it isn\u2019t - it\u2019s an ",Object(s.b)("inlineCode",{parentName:"p"},"INSERT"),". For more ways you can think incorrectly about Kafka, see the ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"../About-Kafka"}),"previous post"),"."),Object(s.b)("h3",{id:"managing-dev-and-production-configs"},"Managing dev and production configs"),Object(s.b)("p",null,"So we have a pretty good idea of the low level/transport layer for the data now, and we\u2019ve come up with a way to use Kafka to address points one and two from our technical design to get data across the cluster in a reasonable and safe way. Refer to twitter-topic.conf for a summary of the appropriate settings, if you\u2019ve been following the above they should make sense."),Object(s.b)("figure",{className:i.a.figureleft},Object(s.b)("img",{src:p.a,style:{width:"auto",maxWidth:"inherit",height:"auto"},className:i.a.image,alt:"Guy laughing."}),Object(s.b)("figcaption",null,"Yes, all of our infrastructure is code deployed in CI/CD.")),Object(s.b)("p",null,"The only problem is that we only have a single broker on our cluster, so how can we have three replications? Trying to create this topic will result in an error. I\u2019m leaving it that way, because that\u2019s how we\u2019d like to see it in production, where we won\u2019t be able to change that value - because we\u2019ll be using source control or a CI/CD pipeline to push our changes and definitely won\u2019t be creating any topics by hand\u2026 right..?"),Object(s.b)("p",null,"I may post about building a tool to parse and apply these files later, but overriding these kinds of configs in our dev environment is what etcd is there for (among other things), and we\u2019ll cover that in a future post."))),Object(s.b)("div",{style:{width:"100%",clear:"both"}}),Object(s.b)("h2",{id:"producing-messages-to-kafka-from-scala"},"Producing messages to Kafka from Scala"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Grab the Github repo from ",Object(s.b)("a",Object.assign({parentName:"strong"},{href:"https://github.com/Miles-Garnsey/DataEngineeringPt3"}),"here"),".")," If (like me) you\u2019re really a Python engineer and not wholly impressed with the whole idea of compilation generally, you\u2019ll probably find this folder structure to be a dog\u2019s breakfast. Sorry."),Object(s.b)("h2",{id:"one-click-deploy---wow"},"One click deploy - Wow."),Object(s.b)("p",null,"I\u2019m even more sorry to report that this is a standard Scala project, with a structure common to those using the fairly ubiquitous(ly derided) build tool ",Object(s.b)("inlineCode",{parentName:"p"},"sbt"),". Do not blame me, I do not make the rules. While other options (Ammonite especially) exist, we couldn\u2019t demo all of the Avrohugger things we\u2019d like to from there, so we may as well get the pain over with early."),Object(s.b)("p",null,"You can install ",Object(s.b)("inlineCode",{parentName:"p"},"sbt")," yourself, Google is your friend if you have difficulty. You\u2019ll also likely want an IDE suited to Scala, your main options being ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://www.jetbrains.com/idea/"}),"IDEA"),", ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://code.visualstudio.com/"}),"VS Code")," or ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://atom.io/"}),"Atom")," with ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://www.scala-lang.org/2019/04/16/metals.html"}),"Metals"),", or hacking something together using ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://ammonite.io/"}),"Ammonite"),", an editor, and some way to work with an SBT file (which might just be manually copying stuff given the top hit for \u201csbt ammonite\u201d on Google is ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/alexarchambault/sbt-ammonite"}),"broken"),")."),Object(s.b)("p",null,"None of these options is great, but IDEA is quick to get running (although it frequently produces false positive errors and other strange behaviours)."),Object(s.b)("div",{className:i.a.sidebarcontainer},Object(s.b)("span",{className:i.a.sidebar},Object(s.b)("h3",{id:"wheres-my-code-five-levels-deep"},"Where\u2019s my code? Five levels deep."),Object(s.b)("figure",{class:i.a.figureright},Object(s.b)("img",{src:h.a,className:i.a.image,alt:"Inception."}),Object(s.b)("figcaption",{style:{fontSize:"smaller"}},"Are we still in the project directory?")),Object(s.b)("p",null,"Ah\u2026 Yes. We all know that one of the best ways to convince your boss that you\u2019ve done some work is to completely bamboozle them, and often some sort of directory structure Inception is just the ticket. Scala lore therefore institutes unquestionable rules stating that:"),Object(s.b)("ol",null,Object(s.b)("li",{parentName:"ol"},"Only one class, in only one file, shall exist per folder."),Object(s.b)("li",{parentName:"ol"},"That every class shall exist in its own namespace, inside one of those folders."),Object(s.b)("li",{parentName:"ol"},"That the namespaces defined in ",Object(s.b)("inlineCode",{parentName:"li"},"package")," statements and folder structure shall reflect each other perfectly.")),Object(s.b)("p",null,"Follow them, and I guarantee that by the time your boss has finished clicking through the endlessly nested hierarchy of filesystem goodies, they\u2019ll have forgotten what they were looking for in the first place; and will not ask you questions. Truly, Scala is an enterprise-fit anguage."),Object(s.b)("p",null,"I note that I have severely violated these rules in this tute by basically chucking everything in the same folder (",Object(s.b)("inlineCode",{parentName:"p"},"main.scala.io.github.milesgarnsey.blog"),"). This has the pleasing upside that I don\u2019t have to import my own code, and suits my purposes in that my reader may actually understand some of what is going on.")),Object(s.b)("p",null,"To start with, have a look at the build system files - especially;"),Object(s.b)("ol",null,Object(s.b)("li",{parentName:"ol"},Object(s.b)("inlineCode",{parentName:"li"},"build.sbt")),Object(s.b)("li",{parentName:"ol"},Object(s.b)("inlineCode",{parentName:"li"},"./project/plugins.sbt")),Object(s.b)("li",{parentName:"ol"},Object(s.b)("inlineCode",{parentName:"li"},"./project/.sbtopts"))),Object(s.b)("p",null,"(1) defines the libraries you want to use, and (in our case) (2) defines an ",Object(s.b)("inlineCode",{parentName:"p"},"sbt")," plugin to build Docker containers. Finally, (3) saves us a lot of head scratching down the line when we start hitting mysterious heap errors - which is something that can happen during both compilation and run phases, thanks to the joys of the JVM. ",Object(s.b)("inlineCode",{parentName:"p"},"sbt")," creates plenty of additional cruft (which is both distracting and infuriating), but most of it can be ignored."),Object(s.b)("p",null,"If we\u2019re modern developers, it would be nice if we could get this into our cluster relatively seamlessly, but (from the second post in this series) we know that there are some complexities behind getting docker images into minikube, let alone unpackaged application code."),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"What we didn\u2019t mention, is that to access the docker daemon in minikube, we can actually run ",Object(s.b)("inlineCode",{parentName:"strong"},"eval $(minikube docker-env)"),", which will then direct the commands we\u2019re typing into our regular Docker client back into the Minikube VM.")),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-bash","data-language":"bash","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token builtin class-name">eval</span> <span class="token variable"><span class="token variable">$(</span>minikube docker-env<span class="token variable">)</span></span>\n<span class="token punctuation">(</span>cd <span class="token punctuation">..</span> <span class="token operator">&amp;&amp;</span> sbt docker:publishLocal<span class="token punctuation">)</span>\nkubectl --namespace<span class="token operator">=</span>dev delete pods,replicasets.apps -l <span class="token assign-left variable">app</span><span class="token operator">=</span>data-engineering-blog\nkubectl apply -f deploy.yaml\nkubectl logs -f -p -l <span class="token string">"app=data-engineering-blog"</span> --all-containers<span class="token operator">=</span>true\n'}}))),Object(s.b)("p",null,"So because we also have the ",Object(s.b)("inlineCode",{parentName:"p"},"sbt")," packager set up to use Docker, we can actually just run ",Object(s.b)("inlineCode",{parentName:"p"},"sbt docker:publishLocal")," and ",Object(s.b)("inlineCode",{parentName:"p"},"sbt")," will publish to Minikube. I\u2019ve included a K8s manifest to ensure that this all works correctly once we hit deploy. More likely, you will just run the script above - ",Object(s.b)("inlineCode",{parentName:"p"},"deploy.sh")," without thinking too much about it. ",Object(s.b)("strong",{parentName:"p"},"Congratulations, laziness is becoming in a data scientist, and you\u2019re developing well in this regard.")),Object(s.b)("p",null,"We could get a lot fancier and do this with CI/CD servers which hook up to Github (GoCD, Jenkins spring to mind), and private Docker Registries which receive their output images and redeploy the app. There are some nice tools that do all of this stuff in a single place (Gitlab for example), but really, what we have here is pretty effective, and almost zero config is required. When you\u2019re moving jobs frequently (e.g. if you have the joy of being a consultant, contractor, or other variety of gun for hire as I do), simple deployment pipelines that rely mostly on basic linux tools are great."),Object(s.b)("p",null,"Now let\u2019s have a look at this compiled-language-business shall we? Our ",Object(s.b)("inlineCode",{parentName:"p"},"sbt")," build definition told us where the main class can be found - ",Object(s.b)("inlineCode",{parentName:"p"},'Compile / mainClass := Some("main.scala.io.github.milesgarnsey.blog.Entrypoint")'),", let\u2019s start there.")),Object(s.b)("h2",{id:"scala-an-entirely-rational-and-very-consistent-language"},"Scala: an entirely rational and very consistent language"),Object(s.b)("p",null,"First off, we can see that our ",Object(s.b)("inlineCode",{parentName:"p"},"Entrypoint")," is an ",Object(s.b)("inlineCode",{parentName:"p"},"object")," (not a class, because we need something which is a singleton to launch the ",Object(s.b)("inlineCode",{parentName:"p"},"App"),"). It extends ",Object(s.b)("inlineCode",{parentName:"p"},"LazyLogging")," which is why we can call methods of ",Object(s.b)("inlineCode",{parentName:"p"},"logger")," without declaring it. Go research these terms if you aren\u2019t familiar with them. Formalities dealt with, we\u2019re then loading some configs via ",Object(s.b)("inlineCode",{parentName:"p"},"val config = ConfigFactory.load()"),"."),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-scala","data-language":"scala","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">object</span> Entrypoint <span class="token keyword">extends</span> App <span class="token keyword">with</span> LazyLogging <span class="token punctuation">{</span>\n  logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">"Initialising Data engineering Part III demo app..."</span><span class="token punctuation">)</span>\n  <span class="token keyword">val</span> config <span class="token operator">=</span> ConfigFactory<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token keyword">val</span> producer <span class="token operator">=</span> <span class="token keyword">new</span> ToyProducer<span class="token punctuation">(</span>\n    config<span class="token punctuation">.</span>getString<span class="token punctuation">(</span><span class="token string">"kafka-brokers"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    config<span class="token punctuation">.</span>getString<span class="token punctuation">(</span><span class="token string">"output-topic"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token keyword">val</span> sendresult <span class="token operator">=</span> producer<span class="token punctuation">.</span>sendmessage<span class="token punctuation">(</span>config<span class="token punctuation">.</span>getString<span class="token punctuation">(</span><span class="token string">"output-message"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span>sendresult<span class="token punctuation">.</span>toString<span class="token punctuation">)</span>\n  Thread<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3600000</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n'}}))),Object(s.b)("p",null,"While config wrangling is not exciting ML functionality, one of the things I realised early when working with Scala was that compilation via SBT is agonisingly slow. ",Object(s.b)("strong",{parentName:"p"},"To avoid spending half our lives waiting for the build cycle to complete and the container to deploy (which is even slower in cloud development environments, especially for larger containers) it helps to have a config file where you can change settings quickly.")),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"Note that agonisingly slow means 45\u2013120 seconds (if it is taking longer for a project like this you\u2019re doing something wrong). This is agonising if you\u2019re making a bunch of changes in quick succession, don\u2019t know the language well, and want to test after each change. That would be at least 10\u201320 recompiles per hour, which if you multiply it out comes out to you having spend something like a quarter of your hour waiting for recompilation.")),Object(s.b)("p",null,"We instantiate a ToyProducer class and pass some of the configs - we could pass the whole config, but that would diminish the modularity of the code."),Object(s.b)("p",null,"Diving into what this ToyProducer class actually does, we\u2019ll see that it instantiates a Java ",Object(s.b)("inlineCode",{parentName:"p"},"Properties")," object to receive our configs, which tips us off that this may be a Java object being accessed from Scala. When we have to do this we basically lose a lot of the elegance of Scala, so the \u201cScala can access the Java ecosystem\u201d argument actually isn\u2019t a great one (unless you enjoy spending your life writing extremely awkward interfaces to loosely supported languages)."),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-scala","data-language":"scala","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">class</span> ToyProducer<span class="token punctuation">(</span>bootstrapServers<span class="token operator">:</span> <span class="token builtin">String</span><span class="token punctuation">,</span> topic<span class="token operator">:</span> <span class="token builtin">String</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">val</span> props <span class="token operator">=</span> <span class="token keyword">new</span> Properties\n  props<span class="token punctuation">.</span>put<span class="token punctuation">(</span><span class="token string">"bootstrap.servers"</span><span class="token punctuation">,</span> bootstrapServers<span class="token punctuation">)</span>\n  props<span class="token punctuation">.</span>put<span class="token punctuation">(</span><span class="token string">"key.serializer"</span><span class="token punctuation">,</span> <span class="token string">"org.apache.kafka.common.serialization.StringSerializer"</span><span class="token punctuation">)</span>\n  props<span class="token punctuation">.</span>put<span class="token punctuation">(</span><span class="token string">"value.serializer"</span><span class="token punctuation">,</span> <span class="token string">"org.apache.kafka.common.serialization.StringSerializer"</span><span class="token punctuation">)</span>\n\n  <span class="token keyword">val</span> client <span class="token operator">=</span> <span class="token keyword">new</span> KafkaProducer<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">,</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>\n  <span class="token keyword">def</span> sendmessage<span class="token punctuation">(</span>message<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">)</span><span class="token operator">:</span> RecordMetadata<span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token keyword">val</span> res <span class="token operator">=</span> client<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token keyword">new</span> ProducerRecord<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">,</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">(</span>topic<span class="token operator">=</span>topic<span class="token punctuation">,</span>K<span class="token operator">=</span><span class="token string">"No key here..."</span><span class="token punctuation">,</span>V<span class="token operator">=</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span>\n    res<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n'}}))),Object(s.b)("p",null,"Once we\u2019ve gotten over the nauseating getty/settyness of the interface, the clunkiness becomes particularly clear on line 13 - try to run deploy.sh in the deploy folder\u2026 Yes, you receive an error helpfully telling you that there is something wrong with your method signature. This is because Java methods (even if called from Scala) can\u2019t take named parameters. Remove the parameter names and try again\u2026"),Object(s.b)("h3",{id:"how-can-you-log-that-the-logging-is-broken-if-the-logging-is-broken-so-you-cant-log-that"},"How can you log that the logging is broken if the logging is broken so you can\u2019t log that\u2026"),Object(s.b)("p",null,"OK, it now builds and deploys, jump into your kubernetes dashboard (",Object(s.b)("inlineCode",{parentName:"p"},"minikube dashboard")," in your console will do it - please read the previous posts\u2026), select your dev namespace and go to overview; you should see your replica set running there. But sadly the container has failed\u2026 So much for Scala catching most errors at compilation time\u2026"),Object(s.b)("p",null,"Why did it fail? Who knows, your logging is broken - at least you can claim that 'we are not aware of any issues\u2019."),Object(s.b)("p",null,"The logging framework scans your classpath for logging implementations to bind to, and you have one in both ",Object(s.b)("inlineCode",{parentName:"p"},"logback-classic"),", as well as the helpfully named ",Object(s.b)("inlineCode",{parentName:"p"},"SLF4J-Log4J"),", which has been imported as a transitive dependancy (a dependancy contained in a library you are importing). Honestly, where did you even learn to Scala, you must have had a hopeless teacher."),Object(s.b)("p",null,"To fix this, we need to go back to our SBT file and seperate the ",Object(s.b)("inlineCode",{parentName:"p"},"Seq")," containing our library dependancies into two, one of which explicitly excludes the SLF4J organisation -"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-scala","data-language":"scala","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'libraryDependencies <span class="token operator">++</span><span class="token operator">=</span> Seq<span class="token punctuation">(</span>\n    <span class="token string">"org.apache.kafka"</span> <span class="token operator">%</span><span class="token operator">%</span> <span class="token string">"kafka-streams-scala"</span> <span class="token operator">%</span> <span class="token string">"2.2.0"</span><span class="token punctuation">,</span>\n    <span class="token string">"io.confluent"</span> <span class="token operator">%</span> <span class="token string">"kafka-avro-serializer"</span> <span class="token operator">%</span> <span class="token string">"3.1.2"</span><span class="token punctuation">,</span>\n    <span class="token string">"org.apache.kafka"</span> <span class="token operator">%</span> <span class="token string">"kafka_2.9.2"</span> <span class="token operator">%</span> <span class="token string">"0.8.2.2"</span><span class="token punctuation">,</span>\n    <span class="token string">"com.typesafe.scala-logging"</span> <span class="token operator">%</span><span class="token operator">%</span> <span class="token string">"scala-logging"</span> <span class="token operator">%</span> <span class="token string">"3.9.2"</span><span class="token punctuation">,</span>\n    <span class="token string">"com.typesafe"</span> <span class="token operator">%</span> <span class="token string">"config"</span> <span class="token operator">%</span> <span class="token string">"1.3.4"</span><span class="token punctuation">,</span>\n    <span class="token string">"ch.qos.logback"</span> <span class="token operator">%</span> <span class="token string">"logback-classic"</span> <span class="token operator">%</span> <span class="token string">"1.0.13"</span><span class="token punctuation">)</span>\n'}}))),Object(s.b)("p",null,"becomes -"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-scala","data-language":"scala","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'libraryDependencies <span class="token operator">++</span><span class="token operator">=</span> Seq<span class="token punctuation">(</span>\n    <span class="token string">"org.apache.kafka"</span> <span class="token operator">%</span><span class="token operator">%</span> <span class="token string">"kafka-streams-scala"</span> <span class="token operator">%</span> <span class="token string">"2.2.0"</span><span class="token punctuation">,</span>\n    <span class="token string">"io.confluent"</span> <span class="token operator">%</span> <span class="token string">"kafka-avro-serializer"</span> <span class="token operator">%</span> <span class="token string">"3.1.2"</span><span class="token punctuation">,</span>\n    <span class="token string">"org.apache.kafka"</span> <span class="token operator">%</span> <span class="token string">"kafka_2.9.2"</span> <span class="token operator">%</span> <span class="token string">"0.8.2.2"</span><span class="token punctuation">,</span>\n    <span class="token string">"com.typesafe.scala-logging"</span> <span class="token operator">%</span><span class="token operator">%</span> <span class="token string">"scala-logging"</span> <span class="token operator">%</span> <span class="token string">"3.9.2"</span><span class="token punctuation">,</span>\n    <span class="token string">"com.typesafe"</span> <span class="token operator">%</span> <span class="token string">"config"</span> <span class="token operator">%</span> <span class="token string">"1.3.4"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>map<span class="token punctuation">(</span>_<span class="token punctuation">.</span>exclude<span class="token punctuation">(</span><span class="token string">"org.slf4j"</span><span class="token punctuation">,</span> <span class="token string">"slf4j-log4j12"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\nlibraryDependencies <span class="token operator">++</span><span class="token operator">=</span> Seq<span class="token punctuation">(</span><span class="token string">"ch.qos.logback"</span> <span class="token operator">%</span> <span class="token string">"logback-classic"</span> <span class="token operator">%</span> <span class="token string">"1.0.13"</span><span class="token punctuation">)</span>\n'}}))),Object(s.b)("p",null,"The meaning should be clear to anyone who understands ",Object(s.b)("inlineCode",{parentName:"p"},"map"),"ping an array in any language. We apply the same operation (",Object(s.b)("inlineCode",{parentName:"p"},"exclude"),") to every element (",Object(s.b)("inlineCode",{parentName:"p"},"_")," in Scala, which allows us to anonymously refer to the elements being mapped, sadists, and those of us who prefer clarity at the expense of brevity might prefer the verbosity of ",Object(s.b)("inlineCode",{parentName:"p"},"x=>x.exclude(...)"),"). We then add ",Object(s.b)("inlineCode",{parentName:"p"},"logback-classic")," back in without the exclusion."),Object(s.b)("h3",{id:"wheres-kafka-running-again"},"Where\u2019s Kafka running again?"),Object(s.b)("p",null,"Redeploy again and check the logs\u2026"),Object(s.b)("p",null,"Oh no\u2026 Network errors from Kafka - that doesn\u2019t look too healthy. If we look closely we can see that it is failing to talk to localhost - but hang on, that doesn\u2019t seem quite right\u2026 In production, the applications talking to Kafka shouldn\u2019t be on the same machine as Kafka itself - our dev environment has been set up to replicate this hasn\u2019t it? So change the application.conf to talk to our Kubernetes Kafka service at ",Object(s.b)("inlineCode",{parentName:"p"},"kafka-service.dev")," instead of localhost."),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-conf","data-language":"conf","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:"app-name=&quot;data-engineering-blog&quot;\nkafka-brokers=&quot;kafka-service.dev:9092&quot;\nschema-registry=&quot;kafka-service.dev:8081&quot;\noutput-topic=&quot;coyote-test-avro&quot;\noutput-message=&quot;I&#39;m a message!!&quot;\n"}}))),Object(s.b)("p",null,"Redeploy, check the logs - all looks pretty healthy\u2026 And if you use the ",Object(s.b)("inlineCode",{parentName:"p"},"kubectl port-forward --namespace=dev service/kafka-service 3030:3030")," command then head across to ",Object(s.b)("inlineCode",{parentName:"p"},"localhost:3030")," to access the Landoop UI, you\u2019ll see there are some messages in your Kafka topic."),Object(s.b)("figure",{styles:{minWidth:"100%"}},Object(s.b)("img",{src:c.a,className:i.a.image,alt:"Application running in Kubernetes"}),Object(s.b)("figcaption",null,"It works, I took a screenshot to prove it.")))}m.isMDXComponent=!0;var k=function(){arguments.length>0&&void 0!==arguments[0]&&arguments[0];return[{id:"design-choices",level:3,title:"Design Choices",children:[]},{id:"retention",level:3,title:"Retention",children:[]},{id:"managing-dev-and-production-configs",level:3,title:"Managing dev and production configs",children:[]},{id:"producing-messages-to-kafka-from-scala",level:2,title:"Producing messages to Kafka from Scala",children:[]},{id:"one-click-deploy---wow",level:2,title:"One click deploy - Wow.",children:[{id:"wheres-my-code-five-levels-deep",level:3,title:"Where\u2019s my code? Five levels deep.",children:[]}]},{id:"scala-an-entirely-rational-and-very-consistent-language",level:2,title:"Scala: an entirely rational and very consistent language",children:[{id:"how-can-you-log-that-the-logging-is-broken-if-the-logging-is-broken-so-you-cant-log-that",level:3,title:"How can you log that the logging is broken if the logging is broken so you can\u2019t log that\u2026",children:[]},{id:"wheres-kafka-running-again",level:3,title:"Where\u2019s Kafka running again?",children:[]}]}]},f={}},67:function(e,a,n){e.exports={image:"document_image__rZXyh",figure:"document_figure__gWI8Z",figureright:"document_figureright__hCBOD",figureleft:"document_figureleft__1kQb0",sidebarcontainer:"document_sidebarcontainer__3KzLz",sidebar:"document_sidebar__363Ye"}},68:function(e,a,n){e.exports=n.p+"static/media/Post 3 - Application running.dd368ed9.png"},69:function(e,a,n){e.exports=n.p+"static/media/stern.5f3e1298.gif"},70:function(e,a,n){e.exports=n.p+"static/media/inception.5580458b.gif"}}]);
//# sourceMappingURL=3.2adc6655.chunk.js.map